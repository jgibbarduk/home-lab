data_dir  = "/opt/nomad"

bind_addr = "{{ hostvars[item].ansible_facts.tailscale0.ipv4.address }}"

datacenter = "{{ hostvars[item].datacenter }}"

{% if is_server is defined and is_server %}
server {
  enabled           = true
  bootstrap_expect  = {{ groups['server'] | length }}
  encrypt           = "{{ nomad_encryption_key }}"

  server_join {
    retry_join = [
      {% for server in groups['server'] %}
        "{{ hostvars[server].ansible_facts.tailscale0.ipv4.address }}",
      {% endfor %}
    ]
  }
}
{% endif %}

client {
  enabled = true

  {% if hostvars[item].node_pool is defined %}
  node_pool = "{{ hostvars[item].node_pool }}"
  {% endif %}

  {% if hostvars[item].cpu_total_compute is defined %}
  cpu_total_compute = {{ hostvars[item].cpu_total_compute }}
  {% endif %}

  host_network "local" {
      cidr = "{{ hostvars[item].ansible_host }}/32"
      reserved_ports = "22"
  }

  host_network "tailscale" {
    cidr           = "{{ hostvars[item].ansible_facts.tailscale0.ipv4.address }}/32"
    reserved_ports = "22"
  }

  host_volume "docker-sock-ro" {
    path = "/var/run/docker.sock"
    read_only = true
  }

  server_join {
    retry_join = [
      {% for server in groups['server'] %}
        "{{ hostvars[server].ansible_facts.tailscale0.ipv4.address }}",
      {% endfor %}
    ]
  }
}

plugin "docker" {
  config {
    # extra Docker labels to be set by Nomad on each Docker container with the appropriate value
    extra_labels = ["job_name", "task_group_name", "task_name", "namespace", "node_name"]
    allow_privileged = true
    volumes {
      enabled = true
    }
  }
}

plugin "raw_exec" {
  config {
    enabled = true
  }
}

telemetry {
  collection_interval        = "15s"
  disable_hostname           = true
  prometheus_metrics         = true
  publish_allocation_metrics = true
  publish_node_metrics       = true
}

consul {
  address = "{{ hostvars[item].ansible_facts.tailscale0.ipv4.address }}:8500"
  client_auto_join = false
  server_auto_join = false
}

{% if is_server is defined and is_server %}
vault {
  enabled = true
  address = "http://{{ hostvars[item].ansible_facts.tailscale0.ipv4.address }}:8200"
  task_token_ttl = "1h"
  token = "{{ vault_root_token }}"
  namespace = "nomad"
}
{% else %}
vault {
  enabled = true
  address = "http://{{ hostvars[item].ansible_facts.tailscale0.ipv4.address }}:8200"
}
{% endif %}

